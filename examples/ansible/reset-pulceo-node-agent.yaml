- name: Reset pulceo-node-agent
  hosts: fog
  become: true
  gather_facts: true
  vars:
    PRM_VERSION: v1.3.0
    PSM_VERSION: v1.3.0
    PMS_VERSION: v1.3.0
    PNA_VERSION: v1.3.0
  tasks:
    - name: Delete namespace pulceo
      ansible.builtin.command: sudo kubectl delete namespace pulceo
      register: result_delete_namespace
      changed_when: result_delete_namespace.rc != 0
      become: true
      ignore_errors: true

    # - name: Delete secrets
    #   ansible.builtin.command: sudo kubectl delete secrets pna-credentials
    #   register: result_delete_secrets
    #   changed_when: result_delete_secrets.rc != 0
    #   become: true
    #   ignore_errors: true

    # - name: Delete deployment pulceo-node-agent
    #   ansible.builtin.command: sudo kubectl delete deployment pulceo-node-agent
    #   register: result_delete_deployment
    #   changed_when: result_delete_deployment.rc != 0
    #   become: true
    #   ignore_errors: true

    - name: Copy resolv.conf
      ansible.builtin.copy:
        src: files/resolv.conf
        dest: /home/{{ ansible_user }}
        owner: "{{ ansible_user }}"
        mode: "0644"
      tags:
        - reinstall
        - always

    - name: Copy resolv.conf
      ansible.builtin.copy:
        src: files/resolv.conf
        dest: /home/root/resolv.conf
        owner: "{{ ansible_user }}"
        mode: "0644"
      tags:
        - reinstall
        - always

    - name: Copy .env file
      ansible.builtin.template:
        src: files/.env-pulceo
        dest: /home/{{ ansible_user }}/.env-pna
        owner: "{{ ansible_user }}"
        decrypt: true
        mode: "0644"

    - name: Download pulceo-node-agent installation script
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/spboehm/pulceo-node-agent/{{ PNA_VERSION }}/bootstrap-pulceo-node-agent.sh
        dest: /home/{{ ansible_user }}
        owner: "{{ ansible_user }}"
        mode: a+x
        force: true

    - name: Rollout restart pulceo-node-agent
      ansible.builtin.command: sudo kubectl rollout restart deployment pulceo-node-agent
      register: result
      changed_when: result.rc != 0
      become: true

    - name: Wait for availability
      ansible.builtin.uri:
        url: "https://{{ ansible_ssh_host }}:7676/health"
        return_content: true
        validate_certs: true
        status_code:
          - 200
      until: uri_output.status == 200
      retries: 10
      delay: 15
      register: uri_output

    - name: Reboot
      ansible.builtin.reboot:

    - name: Wait for availability2
      ansible.builtin.uri:
        url: "https://{{ ansible_ssh_host }}:7676/health"
        return_content: true
        validate_certs: true
        status_code:
          - 200
      until: uri_output.status == 200
      retries: 10
      delay: 15
      register: uri_output

    # - name: Install pulceo-node-agent
    #   ansible.builtin.shell: "/home/{{ ansible_user }}/bootstrap-pulceo-node-agent.sh"
    #   become: true
    #   become_user: "{{ ansible_user }}"
    #   register: result
    #   changed_when: result != 0

    # - name: Wait for availability
    #   ansible.builtin.uri:
    #     url: "https://{{ ansible_ssh_host }}:7676/health"
    #     return_content: true
    #     validate_certs: true
    #     status_code:
    #       - 200
    #   until: uri_output.status == 200
    #   retries: 10
    #   delay: 15
    #   register: uri_output

    # - name: Wait for availability
    #   ansible.builtin.uri:
    #     url: "https://{{ ansible_ssh_host }}:7676/health"
    #     return_content: true
    #     validate_certs: true
    #     status_code:
    #       - 200
    #   until: uri_output.status == 200
    #   retries: 10
    #   delay: 15
    #   register: uri_output

    # - name: Reboot
    #   ansible.builtin.reboot:

    # - name: Wait for availability2
    #   ansible.builtin.uri:
    #     url: "https://{{ ansible_ssh_host }}:7676/health"
    #     return_content: true
    #     validate_certs: true
    #     status_code:
    #       - 200
    #   until: uri_output.status == 200
    #   retries: 10
    #   delay: 15
    #   register: uri_output

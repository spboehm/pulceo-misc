---
title: "PULCEO in Action"
subtitle: "API-driven Task Scheduling and Offloading <br /> with PULCEO: An Extension"
author: Sebastian Böhm and Guido Wirtz
institute: University of Bamberg, Germany
format: 
  revealjs:
    smaller: true
    slide-number: true
    footer: <https://github.com/spboehm/pulceo-misc>
    logo: images/dsg.png
    css: custom.scss
    template-partials:
      - title-slide.html
---

## Task Scheduling / Offloading {.smaller}

![](figures/task-offloading.drawio.svg)


- IoT / mobile clients, submitting set of independent / atomic tasks $T$
- Heterogeneous cloud, edge and fog nodes $N$
- Tasks $T$ and nodes $N$ are described by 
  - Properties $P$: Layer, Location, Costs, ... 
  - Requirements $R$: CPU, memory, bandwidth, ...

## Motivation

::: columns
::: {.column width="60%"}

Many solutions exist for **task scheduling / offloading / resource allocation**

But, similar to alternative provision models (e.g., service placement):

-   **Reproducibility**
-   (General) **Applicability**

because of

-   **custom** implementations
-   missing **real-world experiments**
:::

::: {.column width="50%"}
Simulations are prevalent: Only 3 out of 36 task offloading strategies were using real-world implementations and evaluations.[^1]
:::
:::

[^1]: S. Dong et al., “Task offloading strategies for mobile edge computing: A survey,” Computer Networks, vol. 254, p. 110791, Dec. 2024, doi: 10.1016/j.comnet.2024.110791.

## Simulations are sufficient?

Selected limitations, addressed by the **authors** of task offloading / scheduling solutions:

> Where the value of **CPU weight** and **memory weight** is an **empirical issue**, and **multiple experiments are required** to obtain the optimal value such that α + β = 1. In this paper, all parameters are set to appropriate values.[^1]

> Phare requires updated information on the clusters participating in the federation,
including **CPU**, **memory**, and **bandwidth usage**. A **real-world implementation** should thus **carefully balance** the resolution of such data and the additional overhead required to process it.[^2]

[^2]: G. Castellano, S. Galantino, F. Risso, and A. Manzalini, “Scheduling Multi-Component Applications Across Federated Edge Clusters With Phare,” IEEE Open J. Commun. Soc., vol. 5, pp. 1814–1826, 2024, doi: 10.1109/OJCOMS.2024.3377917.

Consequently, there is a need for real-world experiments.

# Contributions

Four major contributions

1. Integrating task scheduling and offloading into our holistic cloud-edge orchestration life cycle.
2. A general, universal, and flexible model of tasks, implemented in a publicly available software prototype.
3. Seamless technical integration of already available task-processing applications.
4. A set of standard evaluation metrics for task scheduling and offloading, automatically provided by our
platform.

## PULCEO



## Task Scheduling and Offloading

# Experiment

Based on *A High-Efficient Joint ’Cloud-Edge’ Aware Strategy for Task Deployment and Load Balancing*.

*Y. Dong, G. Xu, M. Zhang, and X. Meng, “A High-Efficient Joint ’Cloud-Edge’ Aware Strategy for Task Deployment and Load Balancing,” IEEE Access, vol. 9, pp. 12791–12802, 2021, doi: 10.1109/ACCESS.2021.3051672.*

# Evaluation

## Task Metrics

::: columns
::: {.column width="70%"}
![](plots/task_metrics.pdf.svg)
:::

::: {.column width="30%"}
- Overhead of the platform
:::
:::

## Performance Metrics

![](plots/performance_metrics.pdf.svg)

## Conclusion
